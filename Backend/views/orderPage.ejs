<% include common/header.ejs %>

<% var isMainPage = false %>
<% include common/cart.ejs %>

<div id="order-form">
  <h3>Контактні дані</h3>
  <form>
    <div class="form-group row">
      <label for="name-input" class="col-xs-2 col-form-label">Ім'я</label>
      <input class="form-control" type="text" id="name-input" name="name" placeholder="Ім'я Прізвище">
      <div class="form-control-feedback">Ай! Введи лише своє ім'я. Без цифр. </div>
    </div>
    <div class="form-group row">
      <label for="phone-input" class="col-xs-2 col-form-label">Телефон</label>
      <input class="form-control" type="text" id="phone-input" name="phone" placeholder="+3801234567">
      <div class="form-control-feedback">Ай! Введи свій телефон у форматі +380... або 0... </div>
    </div>
    <div class="form-group row">
      <label for="address-input" class="col-xs-2 col-form-label">Адреса</label>
      <input class="form-control" type="text" id="address-input" name="address" placeholder="Київ, вул. Спаська 2">
      <div class="form-control-feedback">Ай! Введи свою адресу </div>
    </div>
  </form>
  <div class="info">
    <h4>Інформація про замовлення</h4>
    <div>
      <b>Приблизний час доставки:</b>
      <span id="est-delivery-time">невідомий</span>
    </div>
    <div>
      <b>Адреса доставки:</b>
      <span id="delivery-address">невідома</span>
    </div>

    <button id="order-submit" class="btn btn-warning">Замовити</button>
  </div>
</div>

<div id="googleMap"></div>

<% include common/footer.ejs %>

<script>
  function validate(elem) {
    var $this = $(elem)
    console.log($this)
    switch($this.attr('name')) {
    case 'name':
      return /^[^\d]+$/.test($this.val())
    case 'phone':
      return /(^\+?38\d{10}$)|(^\d{10}$)/.test($this.val())
    case 'address':
      return $this.val().length
    }
  }

  $(function() {
    $('form input').keyup(function() {
      if(validate(this)) {
        $(this).closest('.form-group').removeClass('has-error')
      }
      $("#delivery-address").html($("[name=address]").val())
    })

    $('form input').blur(function() {
      if(!validate(this)) {
        $(this).closest('.form-group').addClass('has-error')
      }
    })
  })

</script>

<script type="text/javascript"  
  src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDbWpaCdYr8-WI3mr2dFvWee3t3oX-6On8&language=uk">
</script>

<script>
  var map
  var directionsDisplay;
  var destinationMarker = null;
  function  initialize()  {
    //Тут починаємо працювати з картою
    var mapProp =  {
    center: new google.maps.LatLng(50.464379,30.519131),
    zoom: 14
    };
    var html_element =  document.getElementById("googleMap");
    map  = new google.maps.Map(html_element,  mapProp);
    //Карта створена і показана

    directionsDisplay = new google.maps.DirectionsRenderer({suppressMarkers: true});
    directionsDisplay.setMap(map);

    var ourPoint = new google.maps.LatLng(50.464379,30.519131);
    var marker  = new google.maps.Marker({
      position: ourPoint,
      map:  map,
      icon: "assets/images/map-icon.png"
    });

    google.maps.event.addListener(map,'click',
      function(evt){
        var coordinates = evt.latLng;

        google.maps.event.addListener(map,'click',function(me){
          var coordinates = me.latLng;
          geocodeLatLng(coordinates,  function(err, address){
              if(!err)  {
                $("#delivery-address").html(address)
                $("#address-input").val(address)
                $("#address-input").closest('.form-group').removeClass('has-error')
                if(!err) {
                    calculateRoute(ourPoint, coordinates, function(err, durationData) {
                      if(!err) {
                        $("#est-delivery-time").html(durationData.duration.text)
                      } else {
                        console.log(err)
                      }
                    })
                  } else {
                    console.log(err)
                  } 
              } else  {
                console.log(err)
              }
          })
        });
    });

    $('#address-input').blur(function() {
      var address = $(this).val()

      geocodeAddress(address, function(err, latLng) {
        calculateRoute(ourPoint, latLng, function(err, durationData) {
          if(!err) {
            $("#est-delivery-time").html(durationData.duration.text)
          } else {
            console.log(err)
          }
        })
      })
    })
  }
  
  function geocodeLatLng(latlng, callback){
    var geocoder  = new google.maps.Geocoder();
    geocoder.geocode({'location': latlng},  function(results, status) {
      if  (status === google.maps.GeocoderStatus.OK&& results[1]) {
        var adress =  results[1].formatted_address;
        callback(null,  adress);
      } else  {
        callback(new  Error("Can't  find  adress"));
      }
    });
  }

  function geocodeAddress(address, callback)  {
    var geocoder  = new google.maps.Geocoder();
    geocoder.geocode({'address':  address}, function(results, status) {
      if  (status === google.maps.GeocoderStatus.OK && results[0]) {
        var coordinates = results[0].geometry.location;
        callback(null,  coordinates);
      } else {
        callback(new  Error("Can  not find coordinates"));
      }
    });
  }

  function calculateRoute(A_latlng,   B_latlng,  callback) {
    var directionService =  new google.maps.DirectionsService();
    directionService.route({
      origin: A_latlng,
      destination:  B_latlng,
      travelMode: google.maps.TravelMode["DRIVING"]
    }, function(response,  status) {
      if  ( status  ==  google.maps.DirectionsStatus.OK ) {
        directionsDisplay.setDirections(response)

        var leg  = response.routes[0].legs[0];

        for (var i = 0; i < leg.steps.length; i++) { } 

        if(destinationMarker) {
          destinationMarker.setMap(null)
        }

        destinationMarker = new google.maps.Marker({ 
          position: leg.steps[i - 1].end_point, 
          map: map, 
          icon: "/assets/images/home-icon.png" 
        }); 

        callback(null,  {
          duration: leg.duration
        });
      } else  {
        callback(new  Error("Can not find  direction"));
      }
    });
  }

  google.maps.event.addDomListener(window,   'load',  initialize);
</script>

<div  id="liqpay"></div>

<script src="//static.liqpay.com/libjs/checkout.js"></script>

<script>
  $(function() {
    $("#order-submit").click(function() {

      if(JSON.parse(localStorage['kma-pizza']).length == 0) {
        alert("Ауч! Кошик пустий")
        return;
      }
        
      var inputs = $("input[name]")
      for(var i = 0; i < 3; i++) {
        $(inputs[i]).closest('.form-group').toggleClass('has-error', !validate(inputs[i]))
      }

      if($('.has-error').length == 0) {

        var req = $('form').serialize() + "&cart=" + encodeURI(localStorage['kma-pizza'])

        $.post("/api/create-order/", req, function(res) {
          if(res.success) {
            //$("#order-submit").attr('disabled', true).html("Це успіх")
            // alert(JSON.stringify(res))
            LiqPayCheckout.init({
              data: res.data,
              signature: res.signature,
              embedTo: "#liqpay",
              mode: "popup" //  embed ||  popup
            }).on("liqpay.callback",  function(data){
              console.log(data.status);
              console.log(data);
            }).on("liqpay.ready", function(data){
              //  ready
            }).on("liqpay.close", function(data){
              //  close
            });
          } else {
            alert("Failed to create order")
          }
        })
      }
    })
  })
</script>